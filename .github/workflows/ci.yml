# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:  
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'  # Set the desired Java version

      - name: Build with Maven
        run: mvn clean install

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Run tests
        run: mvn test

  code_quality:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Run code quality analysis
        run: mvn sonar:sonar -Dsonar.projectKey=cms

  code_coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Generate code coverage report
        run: mvn jacoco:report

  build_docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t cmsimage1 .

  push_docker:
    runs-on: ubuntu-latest
    needs: build_docker
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push Docker image
        run: docker push your_docker_image_name

  push_jar:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Publish JAR to Maven Repository
        run: mvn deploy -DskipTests
